openapi: "3.0.0"
info:
  description: "VocaBot REST API"
  version: "1.0.0"
  title: "VocaBot"



paths:
  /user:
    get:
      tags:
        - "user"
      description: "Get list of users"
      operationId: "getListUsers"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserInfo"
        "403":
          description: Forbidden.
        "404":
          description: Not Found.

    post:
      tags:
        - "user"
      description: "Create user"
      operationId: "Create user"
      requestBody:
        description: Information about User
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        "201":
          description: Created.
        "400":
          description: Bad Request.

  /user/{id}:
    get:
      tags:
        - "user"
      description: "Get user by id"
      operationId: "Get user by id"
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "404":
          description: Not Found.

    patch:
      tags:
        - "user"
      description: "Update user by id"
      operationId: "Update user by id"
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Information about User
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "404":
          description: Not Found.

    delete:
      tags:
        - "user"
      description: "Delete user by id"
      operationId: "Delete user by id"
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content.
        "404":
          description: Not Found.


components:
  schemas:
    UserInfo:
      description: Information about User
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          description: The user ID.
        firstname:
          type: string
          description: The user firstname.
        username:
          type: string
          description: The user name.
        email:
          type: string
          format: email
          description: The user email.
        created:
          type: string
          format: date-time
          description: The user created.
        updated:
          type: string
          format: date-time
          description: The user last updated.